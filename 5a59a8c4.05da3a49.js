(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{119:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return j}));var a=n(0),r=n.n(a);function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},b=Object.keys(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),d=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,b=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=d(n),m=a,j=s["".concat(o,".").concat(m)]||s[m]||p[m]||b;return n?r.a.createElement(j,i(i({ref:t},c),{},{components:n})):r.a.createElement(j,i({ref:t},c))}));function j(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var b=n.length,o=new Array(b);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<b;c++)o[c]=n[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},120:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}},123:function(e,t,n){"use strict";var a=n(0),r=n(124);t.a=function(){const e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},124:function(e,t,n){"use strict";var a=n(0);const r=Object(a.createContext)(void 0);t.a=r},125:function(e,t,n){"use strict";var a=n(0),r=n.n(a),b=n(123),o=n(120),i=n(55),l=n.n(i);const c=37,d=39;t.a=function(e){const{lazy:t,block:n,defaultValue:i,values:s,groupId:p,className:m}=e,{tabGroupChoices:j,setTabGroupChoices:O}=Object(b.a)(),[u,g]=Object(a.useState)(i),N=a.Children.toArray(e.children);if(null!=p){const e=j[p];null!=e&&e!==u&&s.some((t=>t.value===e))&&g(e)}const f=e=>{g(e),null!=p&&O(p,e)},_=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":n},m)},s.map((({value:e,label:t})=>r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":u===e,className:Object(o.a)("tabs__item",l.a.tabItem,{"tabs__item--active":u===e}),key:e,ref:e=>_.push(e),onKeyDown:e=>{((e,t,n)=>{switch(n.keyCode){case d:((e,t)=>{const n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()})(e,t);break;case c:((e,t)=>{const n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()})(e,t)}})(_,e.target,e)},onFocus:()=>f(e),onClick:()=>{f(e)}},t)))),t?Object(a.cloneElement)(N.filter((e=>e.props.value===u))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},N.map(((e,t)=>Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==u})))))}},126:function(e,t,n){"use strict";var a=n(3),r=n(0),b=n.n(r);t.a=function({children:e,hidden:t,className:n}){return b.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:t,className:n}),e)}},81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return d})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),b=(n(0),n(119)),o=n(125),i=n(126),l={id:"loads",title:"Load Generator",sidebar_label:"Load Generator"},c={unversionedId:"loads",id:"loads",isDocsHomePage:!1,title:"Load Generator",description:"---",source:"@site/docs/docs-loads.md",slug:"/loads",permalink:"/api-v3-docs/docs/loads",version:"current",sidebar_label:"Load Generator",sidebar:"someSidebar",previous:{title:"Templates and Assemblies",permalink:"/api-v3-docs/docs/assemblies"},next:{title:"SkyCiv Add-ons",permalink:"/api-v3-docs/docs/add-ons"}},d=[{value:"Functions",id:"functions",children:[{value:"<code>loads.getLoads</code>",id:"loadsgetloads",children:[]},{value:"<code>wind.getPressures</code>",id:"windgetpressures",children:[]}]},{value:"Objects",id:"objects",children:[{value:"<code>site_data</code>",id:"site_data",children:[]},{value:"<code>building_data</code>",id:"building_data",children:[]}]}],s={toc:d};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("hr",null),Object(b.b)("p",null,"Automate wind speed, wind design and snow calculations."),Object(b.b)("hr",null),Object(b.b)("h2",{id:"functions"},"Functions"),Object(b.b)("p",null,"The following functions assist in the determination of loads due to wind and snow."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"loadsgetloads"},Object(b.b)("inlineCode",{parentName:"h3"},"loads.getLoads")),Object(b.b)("p",null,"Using the below variables, users can get the wind speed, snow loads and wind pressures from ASCE, AS1170, NBCC or Eurocode Design Standards."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="Sample input for loads.getLoads"',title:'"Sample',input:!0,for:!0,'loads.getLoads"':!0}),'{\n    "function": "loads.getLoads",\n    "arguments": {\n        "site_data": {},\n        "building_data": {}\n    }\n}\n')),Object(b.b)("a",{href:"https://platform.skyciv.com/api/v3?preload_function=loads.getLoads_asce",target:"_blank",class:"sample-code-btn"},"Try ",Object(b.b)("code",null,"loads.getLoads")),Object(b.b)("br",null),Object(b.b)("h4",{id:"relevant-components"},"Relevant components"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"The ",Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"#site_data"}),Object(b.b)("inlineCode",{parentName:"a"},"site_data"))," object"),Object(b.b)("li",{parentName:"ul"},"The ",Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"#building_data"}),Object(b.b)("inlineCode",{parentName:"a"},"building_data"))," object")),Object(b.b)("p",null,"The response will return design wind speed, elevations, topography, wind and snow pressures and confirm the address of the site location under the key ",Object(b.b)("inlineCode",{parentName:"p"},"wind_speed"),". In addition to this, if the terrain data is requested (user provides ",Object(b.b)("inlineCode",{parentName:"p"},"wind_direction")," and ",Object(b.b)("inlineCode",{parentName:"p"},"exposure")," keys) it will also return topography data:"),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="Sample response for loads.getLoads"',title:'"Sample',response:!0,for:!0,'loads.getLoads"':!0}),'{\n    "site_data": {\n        "country": "United Kingdom",\n        "lat": 51.501364,\n        "lng": -0.14189,\n        "elevation": 6.36,\n        "formatted_address": "Westminster, London SW1A 1AA, UK"\n    },\n    "wind_data": {\n        "uk_ireland_contour": 21.621648873984707,\n        "distance_from_shore": {\n            "0": {\n                "distance": 233.92573712464545,\n                "lat": 53.60510578995467,\n                "lng": -0.1418899999999966\n            },\n            "30": {\n                "distance": 174.5852678317777,\n                "lat": 52.98168910830151,\n                "lng": 0.7127760997660391\n            }\n            // etc\n        },\n        "wind_speed": 21.8\n    },\n    "snow_data": {\n        "snow_region": "zone3",\n        "snow_load": 0.5\n    },\n    "topography": {\n        "code": "en1991",\n        "topo_factor": 1,\n        "comments": "",\n        "location_of_peak": 1740,\n        "elevation_of_peak": 26.6097240447998,\n        "location_of_foot": -1580,\n        "elevation_of_foot": 0,\n        "elevation_of_midheight": 13.3048620223999,\n        "slope": 0.008014977121927652,\n        "H": 26.6097240447998,\n        "x": -1740,\n        "Lu": 3320,\n        "Ld": 240,\n        "terrain_type": "Flat",\n        "elevation_image_base64": "**Base 64 Data**"\n    },\n    "snow_pressure": null,\n    "wind_pressure": {\n        "pressure_type": "building",\n        "pressure_unit": "Pa",\n        "elevation_or_location_unit": "m",\n        "pressures": [\n            {\n                "dirn": "along_L",\n                "surface": "windward_wall",\n                "elevation": [3, 6, 9],\n                "pos_Cpi": [204.49, 204.49, 204.49],\n                "neg_Cpi": [425.75, 425.75, 425.75]\n            },\n            {\n                "dirn": "along_L",\n                "surface": "leeward_wall",\n                "elevation": 21,\n                "pos_Cpi": -325.11,\n                "neg_Cpi": -103.85\n            },\n            {\n                "dirn": "along_L",\n                "surface": "sidewall",\n                "location": [2, 10, 12.4],\n                "pos_Cpi": [-619.531865399467, -442.5227609996193, -309.7659326997335],\n                "neg_Cpi": [-398.27048489965733, -221.26138049980966, -88.50455219992386]\n            },\n            {\n                "surface": "roof",\n                "zone": "F",\n                "pos_Cpi": 194.71,\n                "neg_Cpi": -592.98\n            },\n            {\n                "surface": "roof",\n                "zone": "G",\n                "pos_Cpi": 194.71,\n                "neg_Cpi": -495.63\n            },\n            // etc\n        ],\n        "forces": null\n    }\n}\n\n')),Object(b.b)("p",null,"Here is a sample of the elevation image that is returned when ",Object(b.b)("inlineCode",{parentName:"p"},"elevation_img: true")," :"),Object(b.b)("div",{style:{width:"100%",textAlign:"center",backgroundColor:"white"}},Object(b.b)("img",{src:"/api-v3-docs/img/images/loads-elevation.png"})),Object(b.b)("hr",null),Object(b.b)("h3",{id:"windgetpressures"},Object(b.b)("inlineCode",{parentName:"h3"},"wind.getPressures")),Object(b.b)("p",null,"For generating pressure loads with respect to site and building data."),Object(b.b)(o.a,{defaultValue:"option-1",values:[{label:"ASCE 7 Freestanding Wall/Solid Signs",value:"option-1"},{label:"ASCE 7 Building",value:"option-2"},{label:"ASCE 7 Truss Tower",value:"option-3"}],mdxType:"Tabs"},Object(b.b)(i.a,{value:"option-1",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="Sample input for wind.getPressures"',title:'"Sample',input:!0,for:!0,'wind.getPressures"':!0}),'{\n    "function": "wind.getPressures",\n    "arguments": {\n        "design_code": "asce7-16", //asce7-10 or asce7-16\n        "structure": "freestandingwall", //building, freestandingwall, trusstower\n        "freestandingwall_dimensions": {\n            "ground_to_top": 20, //ground to top of wall\n            "wall_width": 50,\n            "wall_height": 10,\n            "ratio_of_solid_area_to_gross": 0.9, // between 0 to 1.0\n            "length_of_return_corner": 0\n        },\n        "wind_parameters": {\n            "structure_type": "freestandingwall-asce7-16" //freestandingwall or freestandingwall-asce7-16\n        },\n        "snow_parameters": false // not available for freestandingwall and truss towers\n    }\n}\n\n'))),Object(b.b)(i.a,{value:"option-2",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="Sample input for wind.getPressures"',title:'"Sample',input:!0,for:!0,'wind.getPressures"':!0}),'{\n    "function": "wind.getPressures",\n    "arguments": {\n        "design_code": "asce7-16", //asce7-10 or asce7-16\n        "structure": "building", //building, freestandingwall, trusstower\n        "roof_profile": "hip", //gable, hip, monoslope, pitched, troughed, open-monoslope\n        "building_dimensions": {\n            "length": 12.4,\n            "width": 10,\n            "mean_roof_height": 21,\n            "roof_angle": 12\n        },\n        // "wind_parameters" can be an object or false if not considered\n        "wind_parameters": {\n            "structure_type": "mwfrs", // mwfrs or cladding\n            "enclosure": "enclosed", //enclosed, partially_enclosed, open, partially-open\n            "wind_blockage": "obstructed", // clear or obstructed\n            // FOR CLADDING\n            "wall_cladding_area": 1, //wall-cladding-area\n            "roof_cladding_area": 1, // roof-cladding-area\n            "cladding_type": "permeable", // permeable or impermeable\n            "structure_level": [\n                { "floor_level": "2", "floor_elevation": 3 },\n                { "floor_level": "3", "floor_elevation": 6 },\n                { "floor_level": "roof", "floor_elevation": 9 }\n            ]\n        },\n        // "snow_parameters" can be an object or false if not considered\n        "snow_parameters": {\n            "terrain_category": "B", // B, C, D, above-treeline, alaska-no-trees\n            "exposure_condition_roof": "sheltered", // fully-exposed,  partially-exposed, sheltered\n            "thermal_condition": "structure-above-freezing", // unheated-open,  structure-below-freezing, greenhouse, all-structures, structure-above-freezing\n            "sloped_roof_surface_condition": "slippery", // slippery, all-other\n            "unbalanced_snow_load": true, // true or false if unbalanced snow load is considered\n            "snow_load_case": [\n                {\n                    "snow_case_type": "symmetric_gable", // symmetric_gable , asymmetric_gable, lower_roof\n                    "W": 20 //horizontal dist from eav to ridge of symmetric gable\n                },\n                {\n                    "snow_case_type": "asymmetric_gable",\n                    "Wu": 22, // horizontal dist from eav to ridge on upwind side of gable roof\n                    "Wd": 18, // horizontal dist from eav to ridge on downwind side of gable roof\n                    "theta_u": 13, // roof angle on upwind side of gable roof\n                    "theta_d": 16 // roof angle on downwind side of gable roof\n                },\n                {\n                    "snow_case_type": "lower_roof",\n                    "lu": 8, // length of upper roof (upwind)\n                    "hr": 3, // height difference between upper and lower roof\n                    "ld": 6 // length of lower roof (downwind)\n                }\n            ]\n        }\n    }\n}\n\n'))),Object(b.b)(i.a,{value:"option-3",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="Sample input for wind.getPressures"',title:'"Sample',input:!0,for:!0,'wind.getPressures"':!0}),'{\n    "function": "wind.getPressures",\n    "arguments": {\n        "design_code": "asce7-16",\n        "structure": "trusstower", //building, freestandingwall, trusstower\n        "trusstower_dimensions": {\n            "ground_to_top": "80", //ground to top of truss tower\n            "ground_to_centroid": "33",\n            "ratio_of_solid_area_to_gross": "0.23", // between 0 to 1.0\n            "tower_cross_section": "square", //square or triangle\n            "member_section": "round", //round or flat\n            "tower_length": "20", //dimension of one side for square or triangle\n            "truss_type": "cross", //warren cross pratt howe\n            "base_column_height": "10", //column/pedestal height\n            "top_base_ratio": "0.6" //ratio of top dimension to bottom dimension\n        },\n        "wind_parameters": {\n            "structure_type": "trusstower-asce7-16", //trusstower or trusstower-asce7-16\n            "structure_level": [\n                {\n                    "node_level": "2",\n                    "node_elevation": 10\n                },\n                {\n                    "node_level": "3",\n                    "node_elevation": 20\n                },\n                {\n                    "node_level": "roof",\n                    "node_elevation": 30\n                }\n            ]\n        },\n        "snow_parameters": false\n    }\n}\n\n')))),Object(b.b)(o.a,{defaultValue:"option-1",values:[{label:"EN 1991",value:"option-1"},{label:"AS/NZS 1170",value:"option-2"},{label:"NBCC 2015",value:"option-3"}],mdxType:"Tabs"},Object(b.b)(i.a,{value:"option-1",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js",metastring:'title="Sample input for wind.getPressures"',title:'"Sample',input:!0,for:!0,'wind.getPressures"':!0}),"const bld_args = {\n    design_code: 'en1991',\n    structure: 'building',\n    roof_profile: 'gable', //gable, hip, monoslope, pitched, troughed, open-monoslope\n    building_dimensions: {\n        length: 12.4,\n        width: 10,\n        ground_to_top: 21,\n        roof_angle: 12,\n    },\n    //\"wind_parameters\" can be an object or false if not considered\n    wind_parameters: {\n        structure_type: 'building', // building or free_roof\n        // \"wind_blockage\": \"obstructed\", // clear or obstructed,\n        flat_roof_type: 'not-applicable', // not-applicable, sharp-eaves, with-parapet, curved-eaves, mansard-eaves\n        structure_level: [\n            { floor_level: '2', floor_elevation: 3 },\n            { floor_level: '3', floor_elevation: 6 },\n            { floor_level: 'roof', floor_elevation: 9 },\n        ],\n        wall_area_en1991: 10, //optional - default value is 10. Ranging from 1 to 10 sqm if wall component/cladding is analyzed\n        roof_area_en1991: 10, //optional - default value is 10. Ranging from 1 to 10 sqm if roof component/cladding is analyzed\n    },\n    // \"snow_parameters\" can be an object or false if not considered\n    snow_parameters: false,\n};\n\n"))),Object(b.b)(i.a,{value:"option-2",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js",metastring:'title="Sample input for wind.getPressures"',title:'"Sample',input:!0,for:!0,'wind.getPressures"':!0}),"const bld_args = {\n    design_code: 'as1170',\n    structure: 'building',\n    roof_profile: 'gable', //gable, hip, monoslope, pitched, troughed, open-monoslope\n    building_dimensions: {\n        length: 12.4,\n        width: 10,\n        height: 21,\n        roof_angle: 12,\n        mean_roof_height: 22,\n    },\n    // \"wind_parameters\" can be an object or false if not considered\n    wind_parameters: {\n        structure_type: 'building', // building, free-roof, cladding\n        wind_blockage: 'blocked', // empty or blocked\n        elevated_building: false, //true or false\n        wind_blockage: '',\n        wall_condition: '5', // 1 to 9\n        action_combination_case: '1', // 1 to 8\n        wall_type: 'impermeable', // permeable or impermeable\n        ratio_of_opening_to_total_area: '0',\n        structure_level: [\n            { floor_level: '2', floor_elevation: 3 },\n            { floor_level: '3', floor_elevation: 6 },\n            { floor_level: 'roof', floor_elevation: 9 },\n        ],\n\n        // FOR CLADDING\n        // \"wall_cladding_area\": 1, //wall-cladding-area\n        // \"roof_cladding_area\": 1, //  roof-cladding-area\n        // \"cladding_type\": \"permeable\", // permeable or impermeable\n    },\n    // \"snow_parameters\" can be an object or false if not considered\n    snow_parameters: {\n        exposure_category_as1170: 'windswept', // sub-alpine, sheltered, semi-sheltered, windswept\n        unbalanced_snow_load: true, // true/false if unbalanced snow load is considered\n        snow_load_case: [\n            {\n                snow_case_type: 'unbalanced_duopitched',\n                theta1: 16,\n                theta2: 18,\n            },\n            {\n                snow_case_type: 'unbalanced_monopitched',\n                theta: 16,\n            },\n            {\n                snow_case_type: 'drifting_sheltered',\n                l1: 20,\n                l2: 20,\n                hd: 3,\n                theta1: 17,\n                theta2: 17,\n            },\n            {\n                snow_case_type: 'drifting_lower_upper',\n                l1: 20,\n                l2: 20,\n                hd: 3,\n                hr: 5,\n                theta1: 17,\n                theta2: 17,\n            },\n            {\n                snow_case_type: 'drifting_projection_obstruction',\n                h: 3,\n                theta: 17,\n            },\n            {\n                snow_case_type: 'obstructed_sloping_roof_subalpine_parapet',\n                hp: 2,\n                theta: 17,\n            },\n            {\n                snow_case_type: 'obstructed_sloping_roof_subalpine_abutting',\n                theta: 16,\n            },\n            {\n                snow_case_type: 'drifting_lower_roof_subalpine',\n                theta1: 20,\n                theta2: 13,\n                hd: 2.5,\n            },\n        ],\n    },\n};\n\nconst functions = [\n    {\n        function: 'wind.getWindSpeed',\n        arguments: wind_speed_args, //from above wind.getindSpeed\n    },\n    {\n        function: 'wind.getPressures',\n        arguments: bld_args,\n    },\n];\n\n"))),Object(b.b)(i.a,{value:"option-3",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js",metastring:'title="Sample input for wind.getPressures"',title:'"Sample',input:!0,for:!0,'wind.getPressures"':!0}),"const bld_args = {\n    design_code: 'nbcc2015',\n    structure: 'building',\n    roof_profile: 'gable', //gable, hip, monoslope, pitched, troughed, open-monoslope\n    building_dimensions: {\n        length: 12.4,\n        width: 10,\n        reference_height: 21,\n        roof_angle: 12,\n    },\n    // \"wind_parameters\" can be an object or false if not considered\n    wind_parameters: {\n        structure_type: 'cladding', // mwfrs or cladding\n        enclosure: 'enclosed', // enclosed, partially_enclosed, open, partially-open\n        wind_blockage: 'obstructed', // clear or obstructed,\n        cladding_pressure_type: 'external', // external, external_internal\n        wall_cladding_area: 10, // wall cladding area\n        roof_cladding_area: 12, // roof cladding area\n        structure_level: [\n            { floor_level: '2', floor_elevation: 3 },\n            { floor_level: '3', floor_elevation: 6 },\n            { floor_level: 'roof', floor_elevation: 9 },\n        ],\n    },\n    // \"snow_parameters\" can be an object or false if not considered\n    snow_parameters: {\n        sloped_roof_surface_condition: 'slippery', //  slippery,  all-other//\n        unbalanced_snow_load: true, //true  false\n        snow_load_case: [\n            {\n                snow_case_type: 'multilevel_roof_case1', // \"multilevel_roof_case1\"  \"multilevel_roof_case2\"  \"multilevel_roof_case3\"\n                ls: 20,\n                ws: 13,\n                h: 13,\n                hp: 13,\n                alpha: 13,\n                sliding: true, // true or false\n                a: 13,\n            },\n            {\n                snow_case_type: 'areas_adjacent_to_roof_projections',\n                ls: 20,\n                ws: 13,\n                h: 13,\n                lh10: 13,\n            },\n            {\n                snow_case_type: 'gable_roof',\n                ls: 20,\n                ws: 13,\n                alpha: 13,\n            },\n        ],\n    },\n};\n\n")))),Object(b.b)("hr",null),Object(b.b)("h2",{id:"objects"},"Objects"),Object(b.b)("p",null,"The following objects are required arguments for the above functions."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"site_data"},Object(b.b)("inlineCode",{parentName:"h3"},"site_data")),Object(b.b)("p",null,"Get wind speed from site location, based on ASCE 7-10, ASCE 7-16, AS/NZS 1170, NBCC and EN 1991."),Object(b.b)("h4",{id:"common-properties-for-all-design-codes"},"Common properties for all design codes"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Key"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"design_code")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Which design code is this based on: ",Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},"as1170"),", ",Object(b.b)("inlineCode",{parentName:"td"},"asce7-10"),", ",Object(b.b)("inlineCode",{parentName:"td"},"asce7-16"),", ",Object(b.b)("inlineCode",{parentName:"td"},"en1991"),", ",Object(b.b)("inlineCode",{parentName:"td"},"nbcc2015"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"project_address")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"The site location. This will use Google Maps to search the address and select the first option.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"wind_direction")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Wind direction (going to). ",Object(b.b)("inlineCode",{parentName:"td"},"N"),", ",Object(b.b)("inlineCode",{parentName:"td"},"NE"),", ",Object(b.b)("inlineCode",{parentName:"td"},"E"),", ",Object(b.b)("inlineCode",{parentName:"td"},"SE"),", ",Object(b.b)("inlineCode",{parentName:"td"},"S"),", ",Object(b.b)("inlineCode",{parentName:"td"},"SW"),", ",Object(b.b)("inlineCode",{parentName:"td"},"W"),", ",Object(b.b)("inlineCode",{parentName:"td"},"NW"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"lat")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"float")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Latitude of site location (used instead of project_address). E.g. 41.878100 for Chicago")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"lng")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"float")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Longitude of site location (used instead of project_address). E.g. -87.629800 for Chicago")))),Object(b.b)("h4",{id:"design-code-specific-properties"},"Design code specific properties"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Key"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"Design Code"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Description/Options"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"risk_category")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"ASCE 7"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"I"),", ",Object(b.b)("inlineCode",{parentName:"td"},"II"),", ",Object(b.b)("inlineCode",{parentName:"td"},"III"),", ",Object(b.b)("inlineCode",{parentName:"td"},"IV"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"exposure")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"ASCE 7"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Required for topography result ",Object(b.b)("inlineCode",{parentName:"td"},"B"),", ",Object(b.b)("inlineCode",{parentName:"td"},"C"),", ",Object(b.b)("inlineCode",{parentName:"td"},"D"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"ari")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"integer")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"AS/NZS 1170"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Annual Recurrence Interval (in years)",Object(b.b)("br",null)," ",Object(b.b)("inlineCode",{parentName:"td"},"1"),", ",Object(b.b)("inlineCode",{parentName:"td"},"5"),", ",Object(b.b)("inlineCode",{parentName:"td"},"10"),", ",Object(b.b)("inlineCode",{parentName:"td"},"20"),", ",Object(b.b)("inlineCode",{parentName:"td"},"25"),", ",Object(b.b)("inlineCode",{parentName:"td"},"50"),", ",Object(b.b)("inlineCode",{parentName:"td"},"100"),", ",Object(b.b)("inlineCode",{parentName:"td"},"200"),", ",Object(b.b)("inlineCode",{parentName:"td"},"250"),", ",Object(b.b)("inlineCode",{parentName:"td"},"500"),", ",Object(b.b)("inlineCode",{parentName:"td"},"1000"),", ",Object(b.b)("inlineCode",{parentName:"td"},"2000"),", ",Object(b.b)("inlineCode",{parentName:"td"},"2500"),", ",Object(b.b)("inlineCode",{parentName:"td"},"5000"),", ",Object(b.b)("inlineCode",{parentName:"td"},"10000"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"sls_and_uls")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"boolean")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"AS/NZS 1170"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"true")," or ",Object(b.b)("inlineCode",{parentName:"td"},"false"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"country")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"AS/NZS 1170"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"australia")," or ",Object(b.b)("inlineCode",{parentName:"td"},"new_zealand")," ",Object(b.b)("br",null),"Required for SLS and ULS wind speeds")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"design_working_life")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"AS/NZS 1170"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"construction_equipment"),", ",Object(b.b)("inlineCode",{parentName:"td"},"10_years"),", ",Object(b.b)("inlineCode",{parentName:"td"},"25_years"),", ",Object(b.b)("inlineCode",{parentName:"td"},"50_years"),", ",Object(b.b)("inlineCode",{parentName:"td"},"100_years"),", ",Object(b.b)("inlineCode",{parentName:"td"},"less_than_6_months")," (NZ only) ",Object(b.b)("br",null),"Required for SLS and ULS wind speeds")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"importance_level")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"AS/NZS 1170"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Number between ",Object(b.b)("inlineCode",{parentName:"td"},"1"),", ",Object(b.b)("inlineCode",{parentName:"td"},"5")," specifying importance level ",Object(b.b)("br",null),"Required for SLS and ULS wind speeds")))),Object(b.b)("h4",{id:"design-code-specific-topography-properties"},"Design code specific topography properties"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Key"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"Design Code"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Description/Options"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"terrain_category")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"AS/NZS 1170"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"CAT2"),", ",Object(b.b)("inlineCode",{parentName:"td"},"CAT3"),", ",Object(b.b)("inlineCode",{parentName:"td"},"CAT4"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"snow_region")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"AS/NZS 1170"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"alpine"),", ",Object(b.b)("inlineCode",{parentName:"td"},"sub-alpine"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"snow_terrain_class")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"integer")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"AS/NZS 1170"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"1"),", ",Object(b.b)("inlineCode",{parentName:"td"},"2"),", ",Object(b.b)("inlineCode",{parentName:"td"},"3"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"ari")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"NBCC 2015"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Annual Recurrence Interval: ",Object(b.b)("inlineCode",{parentName:"td"},"10_years"),", ",Object(b.b)("inlineCode",{parentName:"td"},"50_years"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"importance_level")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"NBCC 2015"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"low"),", ",Object(b.b)("inlineCode",{parentName:"td"},"normal"),", ",Object(b.b)("inlineCode",{parentName:"td"},"high"),", ",Object(b.b)("inlineCode",{parentName:"td"},"post_disaster"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"limit_state")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"NBCC 2015"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"SLS"),", ",Object(b.b)("inlineCode",{parentName:"td"},"ULS"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"snow_area_classification")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"NBCC 2015"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"rural"),", ",Object(b.b)("inlineCode",{parentName:"td"},"exposed-north-treeline"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"country")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"EN 1991"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"Germany"),", ",Object(b.b)("inlineCode",{parentName:"td"},"United Kingdom"),", ",Object(b.b)("inlineCode",{parentName:"td"},"France"),"... ",Object(b.b)("br",null),"Required for additional parameters (season_month, wind_direction, terrain_category")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"season_month")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"EN 1991"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"For Belgium, France, UK, and Ireland ",Object(b.b)("br",null)," 1 month: ",Object(b.b)("inlineCode",{parentName:"td"},"January"),", ",Object(b.b)("inlineCode",{parentName:"td"},"February"),", ... ",Object(b.b)("br",null)," 2 months (UK and Ireland only): ",Object(b.b)("inlineCode",{parentName:"td"},"January-February"),", ",Object(b.b)("inlineCode",{parentName:"td"},"March-April"),", ...",Object(b.b)("br",null)," 4 months (UK and Ireland only): ",Object(b.b)("inlineCode",{parentName:"td"},"November-February"),", ",Object(b.b)("inlineCode",{parentName:"td"},"December-March"),", ... ",Object(b.b)("br",null)," 6 months (UK and Ireland only): ",Object(b.b)("inlineCode",{parentName:"td"},"October-March"),", ",Object(b.b)("inlineCode",{parentName:"td"},"April-September"),", ...")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"wind_direction")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")," or ",Object(b.b)("inlineCode",{parentName:"td"},"integer")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"EN 1991"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"The angle of which the wind is going to, referenced from N in clockwise direction. Use ",Object(b.b)("inlineCode",{parentName:"td"},"Any")," for worst case",Object(b.b)("br",null),"For Belgium, Poland, United Kingdom, Ireland, and France: (in degrees). Increments of 30\xb0 ranging from ",Object(b.b)("inlineCode",{parentName:"td"},"0")," - ",Object(b.b)("inlineCode",{parentName:"td"},"360")," ",Object(b.b)("br",null)," For other countries: ",Object(b.b)("inlineCode",{parentName:"td"},"N"),", ",Object(b.b)("inlineCode",{parentName:"td"},"NE"),", ",Object(b.b)("inlineCode",{parentName:"td"},"E"),", ",Object(b.b)("inlineCode",{parentName:"td"},"SE"),", ",Object(b.b)("inlineCode",{parentName:"td"},"S"),", ",Object(b.b)("inlineCode",{parentName:"td"},"SW"),", ",Object(b.b)("inlineCode",{parentName:"td"},"W"),", ",Object(b.b)("inlineCode",{parentName:"td"},"NW"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"terrain_category")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"string")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"EN 1991"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"For UK and Ireland:",Object(b.b)("br",null)," ",Object(b.b)("inlineCode",{parentName:"td"},"0")," for Sea ",Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},"I")," or ",Object(b.b)("inlineCode",{parentName:"td"},"II")," for Country ",Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},"III")," or ",Object(b.b)("inlineCode",{parentName:"td"},"IV")," for Town ",Object(b.b)("br",null),Object(b.b)("br",null),"For France: ",Object(b.b)("inlineCode",{parentName:"td"},"0")," ",Object(b.b)("inlineCode",{parentName:"td"},"II")," ",Object(b.b)("inlineCode",{parentName:"td"},"IIIa")," ",Object(b.b)("inlineCode",{parentName:"td"},"IIIb")," ",Object(b.b)("inlineCode",{parentName:"td"},"IV")," ",Object(b.b)("br",null)," For Netherlands: ",Object(b.b)("inlineCode",{parentName:"td"},"0")," ",Object(b.b)("inlineCode",{parentName:"td"},"II")," ",Object(b.b)("inlineCode",{parentName:"td"},"III")," ",Object(b.b)("br",null)," Other countries: ",Object(b.b)("inlineCode",{parentName:"td"},"I")," ",Object(b.b)("inlineCode",{parentName:"td"},"II")," ",Object(b.b)("inlineCode",{parentName:"td"},"III")," ",Object(b.b)("inlineCode",{parentName:"td"},"IV"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"distance_inside_town")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"float")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"EN 1991"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Required for UK and Ireland. Default value is ",Object(b.b)("inlineCode",{parentName:"td"},"20"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"distance_from_shore")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"float")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"EN 1991"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Required for UK and Ireland. Can be obtained from server if wind direction is ",Object(b.b)("strong",{parentName:"td"},"not")," equal to ",Object(b.b)("inlineCode",{parentName:"td"},"Any"),". Default value is ",Object(b.b)("inlineCode",{parentName:"td"},"100"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"displacement_height")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"float")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"EN 1991"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Required for UK and Ireland. Default value is ",Object(b.b)("inlineCode",{parentName:"td"},"0"))))),Object(b.b)(o.a,{defaultValue:"option-1",values:[{label:"ASCE 7-16",value:"option-1"},{label:"AS/NZS 1170.2",value:"option-2"},{label:"NBCC 2015",value:"option-3"},{label:"EN 1991",value:"option-4"}],mdxType:"Tabs"},Object(b.b)(i.a,{value:"option-1",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="Sample site_data input"',title:'"Sample',site_data:!0,'input"':!0}),'{\n    "design_code": "asce7-16", \n    "project_address": "Wacker Avenue, Chicago",\n    "country": "United States",\n    "risk_category": "III",\n    // lat: 41.878100, or lat: 41\xb052"41.2"N \n    // lng: -87.629800, or lng: 87\xb037"47.3"W\n    "topography": {\n        "terrain_data": true,\n        "wind_direction": "N",\n        "exposure": "B",\n        "topo_image": true,\n    }\n}\n'))),Object(b.b)(i.a,{value:"option-2",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="Sample site_data input"',title:'"Sample',site_data:!0,'input"':!0}),'{\n    "design_code": "as1170",\n    "project_address": "Cabramurra, NSW",\n    "ari": "200",\n    "sls_and_uls": true, //requires below information\n    "country": "australia",\n    "design_working_life": "25_years",\n    "importance_level": "3",\n    "topography": {\n        "terrain_data": true,\n        "wind_direction": "E",\n        "terrain_category": "CAT2",\n        "topo_image": true,\n        "country": "United States",\n        "snow_region": "alpine",\n        "snow_terrain_class": "1"\n    }\n}\n'))),Object(b.b)(i.a,{value:"option-3",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="Sample site_data input"',title:'"Sample',site_data:!0,'input"':!0}),'{\n    "design_code": "nbcc2015",\n    "project_address": "Toronto",\n    "ari": "10_years", //50_years\n    "importance_level": "low", //normal, high, post_disaster\n    "limit_state": "SLS", // ULS\n    "topography": {\n        "terrain_data": true,\n        "wind_direction": "N", //NE etc...\n        "terrain_category": "A", //B\n        "topo_image": true,\n        "country": "Canada",\n        "snow_area_classification": "rural"\n    }\n}\n'))),Object(b.b)(i.a,{value:"option-4",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="Sample site_data input"',title:'"Sample',site_data:!0,'input"':!0}),'{\n    "design_code": "en1991",\n    "project_address": "Buckingham Palace",\n    "topography": {\n        "terrain_data": true,\n        "season_month": "January-February",\n        "wind_direction": "30", //degrees\n        "topo_image": true,\n        "country": "United Kingdom",\n        "season_month": "January-February",\n        "terrain_category": "I",\n        "distance_inside_town": 20,\n        "distance_from_shore": 100,\n        "displacement_height": 0\n    }\n}\n')))),Object(b.b)("a",{href:"https://platform.skyciv.com/api/v3?preload_function=loads.getLoads_asce",target:"_blank",class:"sample-code-btn"},"Try ",Object(b.b)("code",null,"loads.getLoads")),Object(b.b)("br",null),Object(b.b)("hr",null),Object(b.b)("h3",{id:"building_data"},Object(b.b)("inlineCode",{parentName:"h3"},"building_data")),Object(b.b)("p",null,"Generate wind pressures or snow loads based on building parameters. These parameters have minor differences between design codes. If you need any assistance, please email us at ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"mailto:support@skyciv.com"}),"support@skyciv.com"),"."),Object(b.b)("h4",{id:"options-for-structure"},"Options for Structure"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"structure"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Remarks"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"building")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Default value")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"freestanding_wall")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"ASCE 7 only")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"truss_tower")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"ASCE 7 only")))),Object(b.b)("h4",{id:"options-for-asce-7-nbcc-2015"},"Options for ASCE 7, NBCC 2015"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"roof_profile"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"enclosure"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"wind_blockage"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"gable")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"enclosed, partially-enclosed, partially-open")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"monoslope")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"enclosed, partially-enclosed, partially-open")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"hip")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"enclosed, partially-enclosed, partially-open")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"pitched")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"open")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"For ASCE 7/NBCC 2015: ",Object(b.b)("inlineCode",{parentName:"td"},"clear, obstructed")," ",Object(b.b)("br",null)," For AS/NZS 1170: ",Object(b.b)("inlineCode",{parentName:"td"},"empty, blocked"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"troughed")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"open")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"string"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"open-monoslope")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(b.b)("inlineCode",{parentName:"td"},"open")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"string"))))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"structure_type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"mwfrs")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Main Wind Force Resisting System")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"cladding")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Components and Cladding")))),Object(b.b)("h4",{id:"options-for-asnzs-1170-and-en-1991"},"Options for AS/NZS 1170 and EN 1991"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"structure_type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"roof_profile"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"building")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"gable, monoslope, hip"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"free_roof")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"For EN 1991: ",Object(b.b)("inlineCode",{parentName:"td"},"pitched, open-monoslope")," ",Object(b.b)("br",null)," For AS/NZS 1170: ",Object(b.b)("inlineCode",{parentName:"td"},"pitched, open-monoslope, troughed"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"For AS/NZS 1170: ",Object(b.b)("inlineCode",{parentName:"td"},"cladding")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(b.b)("inlineCode",{parentName:"td"},"gable, monoslope, hip, pitched, open-monoslope, troughed"))))),Object(b.b)("br",null),"For more info on parameters used for wind or snow load calculation, please refer to our documentation and/or the load generator UI.",Object(b.b)("br",null))}p.isMDXComponent=!0}}]);